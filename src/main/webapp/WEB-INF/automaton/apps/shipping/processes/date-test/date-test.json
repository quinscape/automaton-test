{
    "importDeclarations": [
        {
            "type": "ImportDeclaration",
            "source": "mobx",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "observable"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "computed"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "action"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "@quinscape/automaton-js",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "injection"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "FilterDSL"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "domainql-form",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "FieldMode"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "./queries/Q_WaldoList",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "Q_WaldoList"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "../merge-test/queries/Q_CorgeType",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "Q_CorgeType"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "../datagrid-test/queries/Q_FooType",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "Q_FooType"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "./states/WaldoList",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "WaldoList"
                }
            ]
        }
    ],
    "processExports": {
        "type": "ProcessExports",
        "configuration": [],
        "init": [
            "return WaldoList;"
        ],
        "startState": "WaldoList",
        "scope": {
            "name": "DateTestScope",
            "observables": [
                {
                    "name": "currentWaldo",
                    "defaultValue": "null",
                    "description": null
                },
                {
                    "name": "formMode",
                    "defaultValue": "FieldMode.NORMAL",
                    "description": null
                },
                {
                    "name": "waldos",
                    "defaultValue": "injection(Q_WaldoList)",
                    "description": "* Current todos"
                },
                {
                    "name": "corgeTypes",
                    "defaultValue": "injection(Q_CorgeType)",
                    "description": null
                },
                {
                    "name": "fooTypes",
                    "defaultValue": "injection(Q_FooType)",
                    "description": null
                }
            ],
            "actions": [
                {
                    "name": "updateWaldos",
                    "params": [
                        "waldos"
                    ],
                    "code": "this.waldos = waldos;",
                    "bound": false
                },
                {
                    "name": "setFormMode",
                    "params": [
                        "fieldMode"
                    ],
                    "code": "this.formMode = fieldMode;",
                    "bound": false
                },
                {
                    "name": "removeWaldo",
                    "params": [
                        "id"
                    ],
                    "code": "this.waldos.rows = this.waldos.rows.filter(waldo => waldo.id !== id);",
                    "bound": false
                },
                {
                    "name": "updateCurrent",
                    "params": [
                        "waldo"
                    ],
                    "code": "this.currentWaldo = waldo;",
                    "bound": false
                }
            ],
            "computeds": [],
            "helpers": []
        },
        "extraConstants": [
            "// deconstruct FilterDSL methods\nconst { field, value } = FilterDSL; // noinspection JSUnusedGlobalSymbols"
        ]
    }
}