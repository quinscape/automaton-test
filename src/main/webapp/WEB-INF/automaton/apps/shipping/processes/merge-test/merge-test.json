{
    "importDeclarations": [
        {
            "type": "ImportDeclaration",
            "source": "mobx",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "action"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "observable"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "mobx-utils",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "computedFn"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "@quinscape/automaton-js",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "FilterDSL"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "injection"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "WorkingSet"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "./queries/Q_CorgeType",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "Q_CorgeType"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "./queries/Q_CorgeList",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "Q_CorgeList"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "./states/CorgeList",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "CorgeList"
                }
            ]
        }
    ],
    "processExports": {
        "type": "ProcessExports",
        "configuration": [],
        "init": [
            "return CorgeList;"
        ],
        "startState": "CorgeList",
        "scope": {
            "name": "MergeTestScope",
            "observables": [
                {
                    "name": "currentCorge",
                    "defaultValue": "null",
                    "description": null
                },
                {
                    "name": "corges",
                    "defaultValue": "injection(Q_CorgeList)",
                    "description": "* Corge iQuery"
                },
                {
                    "name": "corgeTypes",
                    "defaultValue": "injection(Q_CorgeType)",
                    "description": null
                }
            ],
            "actions": [
                {
                    "name": "updateCorges",
                    "params": [
                        "corges"
                    ],
                    "code": "this.corges = corges;",
                    "bound": false
                },
                {
                    "name": "removeCorge",
                    "params": [
                        "id"
                    ],
                    "code": "this.corges.rows = this.corges.rows.filter(corge => corge.id !== id);",
                    "bound": false
                },
                {
                    "name": "updateCurrent",
                    "params": [
                        "corge"
                    ],
                    "code": "this.currentCorge = corge;",
                    "bound": false
                }
            ],
            "computeds": [],
            "helpers": [
                {
                    "name": "workingSet",
                    "defaultValue": "new WorkingSet({ typeConfigs: [{ name: \"Corge\", mergeGroups: [{ fields: [\"num\", \"num2\"] }], ignored: [\"modified\"] }], allowDiscard: true, allowApply: true })",
                    "description": "*\n     * Construct our working set with the merge config.\n     *\n     * (See Java class de.quinscape.automaton.model.merge.MergeConfig )\n     * @type {WorkingSet}\n     "
                },
                {
                    "name": "filter",
                    "defaultValue": "computedFn((process, transition) => { return process.scope.currentCorge.name === \"AAA\"; })",
                    "description": null
                }
            ]
        },
        "extraConstants": [
            "// deconstruct FilterDSL methods\nconst { field, value } = FilterDSL; // noinspection JSUnusedGlobalSymbols"
        ]
    }
}