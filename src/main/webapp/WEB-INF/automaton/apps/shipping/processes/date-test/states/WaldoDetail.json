{
    "importDeclarations": [
        {
            "type": "ImportDeclaration",
            "source": "react",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "React"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "@quinscape/automaton-js",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "ViewState"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "Attachments"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "storeDomainObject"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "extractTypeData"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "backToParent"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "deleteDomainObject"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "../composites/WaldoForm",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "WaldoForm"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "./WaldoList",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "WaldoList"
                }
            ]
        }
    ],
    "state": {
        "type": "ViewState",
        "name": "WaldoDetail",
        "transitionMap": {
            "save": {
                "action": {
                    "type": "Action",
                    "params": [
                        "t"
                    ],
                    "code": "// 1.\nAttachments.uploadPending(t.context) // 2.\n.then(() => storeDomainObject({ ...extractTypeData(\"WaldoInput\", t.context) })) // 3.\n.then(() => Attachments.deletePending(t.context)).then(() => scope.waldos.update()).then(() => t.back(backToParent(t)))"
                }
            },
            "delete": {
                "to": "WaldoList",
                "discard": true,
                "confirmation": {
                    "type": "Action",
                    "params": [
                        "context"
                    ],
                    "code": "`Delete ${context.name} ?`"
                },
                "action": {
                    "type": "Action",
                    "params": [
                        "t"
                    ],
                    "code": "{ const { id } = t.context; return deleteDomainObject(\"Waldo\", id).then(didDelete => didDelete && scope.removeWaldo(id)); }"
                }
            },
            "cancel": {
                "to": "WaldoList",
                "discard": true,
                "action": {
                    "type": "Action",
                    "params": [
                        "t"
                    ],
                    "code": "{ console.log(\"Transition 'cancel'\"); return Attachments.clearAll(t.context); }"
                }
            }
        },
        "composite": {
            "type": "CompositeComponent",
            "constants": [
                {
                    "type": "VariableDeclaration",
                    "kind": "const",
                    "declarations": [
                        {
                            "type": "VariableDeclarator",
                            "id": {
                                "type": "ObjectPattern",
                                "properties": [
                                    {
                                        "type": "ObjectProperty",
                                        "key": "env",
                                        "value": {
                                            "type": "Identifier",
                                            "name": "env"
                                        }
                                    }
                                ]
                            },
                            "init": "props"
                        }
                    ]
                },
                {
                    "type": "VariableDeclaration",
                    "kind": "const",
                    "declarations": [
                        {
                            "type": "VariableDeclarator",
                            "id": {
                                "type": "ObjectPattern",
                                "properties": [
                                    {
                                        "type": "ObjectProperty",
                                        "key": "scope",
                                        "value": {
                                            "type": "Identifier",
                                            "name": "scope"
                                        }
                                    }
                                ]
                            },
                            "init": "env"
                        }
                    ]
                }
            ],
            "root": {
                "name": "React.Fragment",
                "attrs": [],
                "kids": [
                    {
                        "name": "div",
                        "attrs": [
                            {
                                "type": "JSXAttribute",
                                "name": "className",
                                "value": {
                                    "type": "Expression",
                                    "code": "\"row\""
                                }
                            }
                        ],
                        "kids": [
                            {
                                "name": "div",
                                "attrs": [
                                    {
                                        "type": "JSXAttribute",
                                        "name": "className",
                                        "value": {
                                            "type": "Expression",
                                            "code": "\"col\""
                                        }
                                    }
                                ],
                                "kids": [
                                    {
                                        "name": "WaldoForm",
                                        "attrs": [
                                            {
                                                "type": "JSXAttribute",
                                                "name": "key",
                                                "value": {
                                                    "type": "JSXExpressionContainer",
                                                    "code": "{scope.currentWaldo.id}"
                                                }
                                            },
                                            {
                                                "type": "JSXAttribute",
                                                "name": "value",
                                                "value": {
                                                    "type": "JSXExpressionContainer",
                                                    "code": "{scope.currentWaldo}"
                                                }
                                            }
                                        ],
                                        "kids": [],
                                        "type": "JSXElement"
                                    }
                                ],
                                "type": "JSXElement"
                            }
                        ],
                        "type": "JSXElement"
                    }
                ],
                "type": "JSXElement"
            }
        }
    },
    "extraConstants": []
}