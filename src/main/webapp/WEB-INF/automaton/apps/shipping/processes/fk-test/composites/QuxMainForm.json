{
    "importDeclarations": [
        {
            "type": "ImportDeclaration",
            "source": "domainql-form",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "Addon"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "Field"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "GlobalConfig"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "GlobalErrors"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "Icon"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "withForm"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "FormContext"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "react",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "React"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "mobx-react-lite",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "fnObserver",
                    "aliasOf": "observer"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "@quinscape/automaton-js",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "Button"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "FilterDSL"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "FKSelector"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "i18n"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "ScrollTracker"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "useAutomatonEnv"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "reactstrap",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "ButtonToolbar"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "../../../../../services/validation",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "validation"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "../../../queries/Q_QuxA",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "Q_QuxA"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "../../../queries/Q_QuxB",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "Q_QuxB"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "../../../queries/Q_QuxC",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "Q_QuxC"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "../../../queries/Q_QuxD",
            "specifiers": [
                {
                    "type": "ImportDefaultSpecifier",
                    "name": "Q_QuxD"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "mobx",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "toJS"
                }
            ]
        }
    ],
    "extraConstants": [
        "const { and, or, field, value, component } = FilterDSL;"
    ],
    "composite": {
        "type": "CompositeComponent",
        "constants": [
            {
                "type": "VariableDeclaration",
                "kind": "const",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "Identifier",
                            "name": "env"
                        },
                        "init": "useAutomatonEnv()"
                    }
                ]
            },
            {
                "type": "VariableDeclaration",
                "kind": "const",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "ObjectPattern",
                            "properties": [
                                {
                                    "type": "ObjectProperty",
                                    "key": "scope",
                                    "value": {
                                        "type": "Identifier",
                                        "name": "scope"
                                    }
                                }
                            ]
                        },
                        "init": "env"
                    }
                ]
            },
            {
                "type": "VariableDeclaration",
                "kind": "const",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "ObjectPattern",
                            "properties": [
                                {
                                    "type": "ObjectProperty",
                                    "key": "formConfig",
                                    "value": {
                                        "type": "Identifier",
                                        "name": "formConfig"
                                    }
                                }
                            ]
                        },
                        "init": "props"
                    }
                ]
            },
            {
                "type": "VariableDeclaration",
                "kind": "const",
                "declarations": [
                    {
                        "type": "VariableDeclarator",
                        "id": {
                            "type": "ObjectPattern",
                            "properties": [
                                {
                                    "type": "ObjectProperty",
                                    "key": "root",
                                    "value": {
                                        "type": "Identifier",
                                        "name": "root"
                                    }
                                }
                            ]
                        },
                        "init": "formConfig"
                    }
                ]
            }
        ],
        "root": {
            "type": "Expression",
            "code": "<><h1>{i18n(\"Qux Detail\")}</h1><GlobalErrors /><Field name=\"name\" helpText=\"Field A!\" /><FKSelector name=\"quxAId\" label=\"simple search filter\" display=\"quxA.name\" searchFilter=\"name\" tooltip={root.quxA && root.quxA.name || GlobalConfig.none()} query={Q_QuxA} required={true} /><FKSelector name=\"quxBName\" label=\"foreign key to name field\" tooltip=\"Example of FK to name field\" helpText={\"Select a QuxB\"} searchFilter=\"name\" modalFilter={FKSelector.NO_FILTER} query={Q_QuxB} /><FKSelector name=\"quxCId1\" label=\"multi-relation / no-search (required)\" tooltip=\"Example of multiple fks to the same type C (FK-1)\" display={\"quxC1.name\"} query={Q_QuxC} /><FKSelector name=\"quxCId2\" label=\"multi-relation / no-search (optional)\" tooltip=\"Example of multiple fks to the same type C (FK-2)\" display={\"quxC2.name\"} query={Q_QuxC} /><FKSelector name=\"quxDId\" label=\"complex search / description addon\" tooltip=\"Example for fk with complex search filter\" display=\"quxD.name\" searchFilter={val => or(field(\"name\").containsIgnoreCase(value(val)), field(\"description\").containsIgnoreCase(value(val)))} query={Q_QuxD}><Addon placement={Addon.RIGHT} text={true} className=\"text-monospace\">{() => root.quxD && \"Description: \" + root.quxD.description || GlobalConfig.none()}</Addon></FKSelector><FKSelector tooltip=\"Custom validation filter with both search and column filter\" name=\"quxD2Id\" display=\"quxD2.name\" label=\"extra column filter\" modalTitle=\"Select target (extra column filter)\" modalFilter={FKSelector.COLUMN_FILTER} searchFilter={val => or(field(\"name\").containsIgnoreCase(value(val)), field(\"description\").containsIgnoreCase(value(val)))} query={Q_QuxD} /><FKSelector tooltip=\"Example for fk with custom validation filter with search filter in the modal\" name=\"quxD3Id\" display=\"quxD3.name\" label=\"no search filter\" modalTitle=\"Select target (no search filter)\" modalFilter={FKSelector.NO_SEARCH_FILTER} searchFilter=\"name\" query={Q_QuxD} /><FKSelector tooltip=\"Example for fk with custom validation filter with search filter in the modal\" name=\"quxD3Id\" display=\"quxD3.value\" label=\"no search filter / numeric\" modalTitle=\"Select target (no search filter)\" modalFilter={FKSelector.NO_SEARCH_FILTER} searchFilter=\"value\" query={Q_QuxD} /><FKSelector tooltip=\"Example for fk with custom validation filter with search filter in the modal\" name=\"quxD4Id\" display=\"quxD4.name\" label=\"injection-based\" modalTitle=\"Select target\" searchFilter={val => or(field(\"name\").containsIgnoreCase(value(val)), field(\"description\").containsIgnoreCase(value(val)))} query={scope.quxDs} /><ButtonToolbar><Button className=\"btn btn-primary mr-1\" transition=\"save\"><Icon className=\"fa-save mr-1\" />\n                    Save\n                </Button><Button className=\"btn btn-secondary mr-1\" transition=\"delete\"><Icon className=\"fa-times mr-1 text-danger\" />\n                    Delete\n                </Button><Button className=\"btn btn-secondary mr-1\" transition=\"cancel\"><Icon className=\"fa-times mr-1\" />\n                    Cancel\n                </Button></ButtonToolbar></>"
        }
    },
    "export": "withForm(fnObserver(QuxMainForm), { type: \"QuxMainInput\", validation: validation(\"QuxMainInput\") })"
}