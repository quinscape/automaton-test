{
    "importDeclarations": [
        {
            "type": "ImportDeclaration",
            "source": "mobx",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "observable"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "computed"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "action"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "runInAction"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "toJS"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "automaton-js",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "injection"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "Process"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "type"
                }
            ]
        }
    ],
    "processExports": {
        "type": "ProcessExports",
        "configuration": [],
        "process": {
            "startState": "t => { t.context = { \"accepted\": \"2017-10-17T22:00:00.000Z\", \"customer\": { \"salutation\": null, \"name\": \"Lukas Mustermann\" }, \"id\": \"d734579f-0b0a-4ab6-9ad5-45f4ee29efb1\", \"number\": \"B00000001\", \"shippingType\": { \"name\": \"STANDARD\" }, \"status\": \"PAID\", \"num\": 12345 }; t.target = \"ProcessTestHome\"; }",
            "states": {
                "ProcessTestHome": {
                    "open-sub": {
                        "to": "ProcessTestHome",
                        "action": {
                            "type": "Action",
                            "params": [
                                "t"
                            ],
                            "code": "{ console.log(\"execute Transition ProcessTestHome.open-sub\"); return process.runSubProcess(\"sub-process\", t.context).then(result => result && runInAction(() => process.currentObject = result)); }"
                        }
                    },
                    "clear": {
                        "to": "ProcessTestHome",
                        "action": {
                            "type": "Action",
                            "params": [
                                "t"
                            ],
                            "code": "{ console.log(\"execute Transition ProcessTestHome.clear\"); return runInAction(() => process.currentObject = null); }"
                        }
                    }
                }
            }
        },
        "scope": null
    }
}