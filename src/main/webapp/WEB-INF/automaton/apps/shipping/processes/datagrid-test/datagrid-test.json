{
    "importDeclarations": [
        {
            "type": "ImportDeclaration",
            "source": "mobx",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "observable"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "computed"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "action"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "toJS"
                }
            ]
        },
        {
            "type": "ImportDeclaration",
            "source": "@quinscape/automaton-js",
            "specifiers": [
                {
                    "type": "ImportSpecifier",
                    "name": "injection"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "config"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "storeDomainObject"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "deleteDomainObject"
                },
                {
                    "type": "ImportSpecifier",
                    "name": "GraphQLQuery"
                }
            ]
        }
    ],
    "processExports": {
        "type": "ProcessExports",
        "configuration": [],
        "process": {
            "startState": "\"DataGridHome\"",
            "states": {
                "DataGridHome": {}
            }
        },
        "scope": {
            "name": "CRUDTestScope",
            "observables": [
                {
                    "name": "currentFoo",
                    "defaultValue": "null",
                    "description": null
                },
                {
                    "name": "foos",
                    "defaultValue": "injection( // language=GraphQL\n`query iQueryFoo\n        {\n            iQueryFoo\n            {\n                columnConfig{\n                    columnStates{\n                        name\n                        enabled\n                        sortable\n                    }\n                }\n                queryConfig{\n                    filter{\n                        fieldFilters{\n                            fields\n                            values\n                            filterType\n                        }\n                        filterTransformer\n                    }\n                }\n                rows{\n                    id\n                    name\n                    num\n                    description\n                    created\n                    type\n                    flag\n                    owner{\n                        id\n                        login\n                    }\n                    \n                }\n            }\n        }`)",
                    "description": "* Current todos"
                }
            ],
            "actions": [
                {
                    "name": "updateFoos",
                    "params": [
                        "foos"
                    ],
                    "code": "this.foos = foos;",
                    "bound": false
                },
                {
                    "name": "removeFoo",
                    "params": [
                        "id"
                    ],
                    "code": "this.foos.rows = this.foos.rows.filter(foo => foo.id !== id);",
                    "bound": false
                },
                {
                    "name": "updateCurrent",
                    "params": [
                        "foo"
                    ],
                    "code": "this.currentFoo = foo;",
                    "bound": false
                }
            ],
            "computeds": [],
            "helpers": []
        },
        "extraConstants": []
    }
}