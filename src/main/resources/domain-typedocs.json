[
    {
        "name": "Foo",
        "description": "Generic domain object. Used as target in datagrid-test. Generated from public.foo in the database dump.",
        "fieldDocs": []
    },
    {
        "name": "FooType",
        "description": "Catalog-like domain object, referenced by Foo. Generated from public.foo_type in the database dump.",
        "fieldDocs": []
    },
    {
        "name": "Bar",
        "description": "Domain object used in ext-filter-test. Generated from public.bar in the database dump.",
        "fieldDocs": []
    },
    {
        "name": "SumPerMonth",
        "description": "Domain object from Java POJO de.quinscape.automatontest.model.SumPerMonth shaped like the sum_per_month view in the database dump",
        "fieldDocs": []
    },
    {
        "name": "Node",
        "description": "Recursive domain object used in animal-test. Generated from public.node in the database dump.",
        "fieldDocs": []
    },
    {
        "name": "QuxMain",
        "description": "Main object for fk_test",
        "fieldDocs": []
    },
    {
        "name": "QuxA",
        "description": "Catalog-like connected via id foreign key to QuxMain",
        "fieldDocs": []
    },
    {
        "name": "QuxB",
        "description": "Catalog-like connected via name foreign key to QuxMain",
        "fieldDocs": []
    },
    {
        "name": "QuxC",
        "description": "Catalog-like connected via id foreign keys to QuxMain twice",
        "fieldDocs": []
    },
    {
        "name": "QuxD",
        "description": "Catalog-like connected via id foreign QuxMain without scalar field",
        "fieldDocs": []
    },
    {
        "name": "Baz",
        "description": "Associated Entity A (see BazLink)",
        "fieldDocs": []
    },
    {
        "name": "BazValue",
        "description": "Associated Entity B (see BazLink)",
        "fieldDocs": []
    },
    {
        "name": "BazLink",
        "description": "Associative entity m-to-n connecting Baz and BazValue",
        "fieldDocs": []
    },
    {
        "name": "AppVersion",
        "description": "Stores merge version metadata",
        "fieldDocs": [
            {
                "name" : "id",
                "description" : "Id of the version. Is the same as the version field in the entity."
            },
            {
                "name" : "data",
                "description" : "JSONB containing the meta-data of the version"
            },
            {
                "name" : "ownerId",
                "description" : "User-id of the owner that created the version"
            },
            {
                "name" : "owner",
                "description" : "Embedded owner object"
            },
            {
                "name" : "created",
                "description" : "Timestamp when the version was created"
            }
        ]
    },
    {
        "name": "Corge",
        "description": "Type complex used in merge-test",
        "fieldDocs": []
    },
    {
        "name": "CorgeType",
        "description": "Type of Corges, connected via relation",
        "fieldDocs": []
    },
    {
        "name": "CorgeLink",
        "description": "Many-to-many link type between Corge and CorgeAssoc",
        "fieldDocs": []
    },
    {
        "name": "CorgeAssoc",
        "description": "Many-to-many associated type to Corge",
        "fieldDocs": []
    },
    {
        "name": "Garply",
        "description": "Entity containing BigDecimal fields",
        "fieldDocs": [
            {
                "name": "id",
                "description": "garply id"
            },
            {
                "name": "name",
                "description": "garply name"
            },
            {
                "name": "value",
                "description": "big decimal field"
            },
            {
                "name": "opt",
                "description": "optional big decimal field"
            }
        ]
    },
    {
        "name": "MetaConfig",
        "description": "Container type to test <FieldMetaButton/> on different field types",
        "fieldDocs": [
        ]
    }
]
