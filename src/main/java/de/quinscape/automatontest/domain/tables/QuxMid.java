/*
 * This file is generated by jOOQ.
*/
package de.quinscape.automatontest.domain.tables;


import de.quinscape.automatontest.domain.Indexes;
import de.quinscape.automatontest.domain.Keys;
import de.quinscape.automatontest.domain.Public;
import de.quinscape.automatontest.domain.tables.records.QuxMidRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuxMid extends TableImpl<QuxMidRecord> {

    private static final long serialVersionUID = 457187733;

    /**
     * The reference instance of <code>public.qux_mid</code>
     */
    public static final QuxMid QUX_MID = new QuxMid();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<QuxMidRecord> getRecordType() {
        return QuxMidRecord.class;
    }

    /**
     * The column <code>public.qux_mid.id</code>.
     */
    public final TableField<QuxMidRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.qux_mid.name</code>.
     */
    public final TableField<QuxMidRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.qux_mid.description</code>.
     */
    public final TableField<QuxMidRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.qux_mid.qux_e_id</code>.
     */
    public final TableField<QuxMidRecord, String> QUX_E_ID = createField("qux_e_id", org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * Create a <code>public.qux_mid</code> table reference
     */
    public QuxMid() {
        this(DSL.name("qux_mid"), null);
    }

    /**
     * Create an aliased <code>public.qux_mid</code> table reference
     */
    public QuxMid(String alias) {
        this(DSL.name(alias), QUX_MID);
    }

    /**
     * Create an aliased <code>public.qux_mid</code> table reference
     */
    public QuxMid(Name alias) {
        this(alias, QUX_MID);
    }

    private QuxMid(Name alias, Table<QuxMidRecord> aliased) {
        this(alias, aliased, null);
    }

    private QuxMid(Name alias, Table<QuxMidRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_QUX_MID, Indexes.QUX_MID_NAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<QuxMidRecord> getPrimaryKey() {
        return Keys.PK_QUX_MID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<QuxMidRecord>> getKeys() {
        return Arrays.<UniqueKey<QuxMidRecord>>asList(Keys.PK_QUX_MID, Keys.QUX_MID_NAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<QuxMidRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<QuxMidRecord, ?>>asList(Keys.QUX_MID__FK_QUX_E_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuxMid as(String alias) {
        return new QuxMid(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public QuxMid as(Name alias) {
        return new QuxMid(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public QuxMid rename(String name) {
        return new QuxMid(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public QuxMid rename(Name name) {
        return new QuxMid(name, null);
    }
}
