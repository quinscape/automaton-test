/*
 * This file is generated by jOOQ.
 */
package de.quinscape.automatontest.domain.tables.pojos;


import de.quinscape.domainql.jooq.GeneratedDomainObject;
import de.quinscape.domainql.jsonb.JSONB;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "app_config",
    schema = "public"
)
public class AppConfig extends GeneratedDomainObject implements Serializable {

    private static final long serialVersionUID = 1L;

    private String name;
    private JSONB scope;

    public AppConfig() {}

    public AppConfig(AppConfig value) {
        this.name = value.name;
        this.scope = value.scope;
    }

    public AppConfig(
        String name,
        JSONB scope
    ) {
        this.name = name;
        this.scope = scope;
    }

    /**
     * Getter for <code>public.app_config.name</code>.
     */
    @Id
    @Column(name = "name", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.app_config.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.app_config.scope</code>.
     */
    @Column(name = "scope", nullable = false)
    @NotNull
    public JSONB getScope() {
        return this.scope;
    }

    /**
     * Setter for <code>public.app_config.scope</code>.
     */
    public void setScope(JSONB scope) {
        this.scope = scope;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final AppConfig other = (AppConfig) obj;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.scope == null) {
            if (other.scope != null)
                return false;
        }
        else if (!this.scope.equals(other.scope))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.scope == null) ? 0 : this.scope.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AppConfig (");

        sb.append(name);
        sb.append(", ").append(scope);

        sb.append(")");
        return sb.toString();
    }
}
