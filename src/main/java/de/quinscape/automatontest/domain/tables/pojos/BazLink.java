/*
 * This file is generated by jOOQ.
 */
package de.quinscape.automatontest.domain.tables.pojos;


import de.quinscape.domainql.jooq.GeneratedDomainObject;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "baz_link",
    schema = "public",
    uniqueConstraints = {
        @UniqueConstraint(name = "baz_link_baz_id_value_id_key", columnNames = { "baz_id", "value_id" })
    }
)
public class BazLink extends GeneratedDomainObject implements Serializable {

    private static final long serialVersionUID = 1L;

    private String id;
    private String bazId;
    private String valueId;

    public BazLink() {}

    public BazLink(BazLink value) {
        this.id = value.id;
        this.bazId = value.bazId;
        this.valueId = value.valueId;
    }

    public BazLink(
        String id,
        String bazId,
        String valueId
    ) {
        this.id = id;
        this.bazId = bazId;
        this.valueId = valueId;
    }

    /**
     * Getter for <code>public.baz_link.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.baz_link.id</code>.
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.baz_link.baz_id</code>.
     */
    @Column(name = "baz_id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getBazId() {
        return this.bazId;
    }

    /**
     * Setter for <code>public.baz_link.baz_id</code>.
     */
    public void setBazId(String bazId) {
        this.bazId = bazId;
    }

    /**
     * Getter for <code>public.baz_link.value_id</code>.
     */
    @Column(name = "value_id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getValueId() {
        return this.valueId;
    }

    /**
     * Setter for <code>public.baz_link.value_id</code>.
     */
    public void setValueId(String valueId) {
        this.valueId = valueId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final BazLink other = (BazLink) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.bazId == null) {
            if (other.bazId != null)
                return false;
        }
        else if (!this.bazId.equals(other.bazId))
            return false;
        if (this.valueId == null) {
            if (other.valueId != null)
                return false;
        }
        else if (!this.valueId.equals(other.valueId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.bazId == null) ? 0 : this.bazId.hashCode());
        result = prime * result + ((this.valueId == null) ? 0 : this.valueId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("BazLink (");

        sb.append(id);
        sb.append(", ").append(bazId);
        sb.append(", ").append(valueId);

        sb.append(")");
        return sb.toString();
    }
}
