/*
 * This file is generated by jOOQ.
*/
package de.quinscape.automatontest.domain.tables;


import de.quinscape.automatontest.domain.Indexes;
import de.quinscape.automatontest.domain.Keys;
import de.quinscape.automatontest.domain.Public;
import de.quinscape.automatontest.domain.tables.records.MetaConfigRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MetaConfig extends TableImpl<MetaConfigRecord> {

    private static final long serialVersionUID = 1700511988;

    /**
     * The reference instance of <code>public.meta_config</code>
     */
    public static final MetaConfig META_CONFIG = new MetaConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MetaConfigRecord> getRecordType() {
        return MetaConfigRecord.class;
    }

    /**
     * The column <code>public.meta_config.id</code>.
     */
    public final TableField<MetaConfigRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.meta_config.name</code>.
     */
    public final TableField<MetaConfigRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.meta_config.text</code>.
     */
    public final TableField<MetaConfigRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.meta_config.num</code>.
     */
    public final TableField<MetaConfigRecord, Integer> NUM = createField("num", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.meta_config.big_num</code>.
     */
    public final TableField<MetaConfigRecord, BigDecimal> BIG_NUM = createField("big_num", org.jooq.impl.SQLDataType.NUMERIC(13, 10), this, "");

    /**
     * The column <code>public.meta_config.flag</code>.
     */
    public final TableField<MetaConfigRecord, Boolean> FLAG = createField("flag", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.meta_config.timestamp</code>.
     */
    public final TableField<MetaConfigRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.meta_config.date</code>.
     */
    public final TableField<MetaConfigRecord, Date> DATE = createField("date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>public.meta_config.type</code>.
     */
    public final TableField<MetaConfigRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.meta_config.url</code>.
     */
    public final TableField<MetaConfigRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.meta_config.attachment_id</code>.
     */
    public final TableField<MetaConfigRecord, String> ATTACHMENT_ID = createField("attachment_id", org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>public.meta_config.corge_type_id</code>.
     */
    public final TableField<MetaConfigRecord, String> CORGE_TYPE_ID = createField("corge_type_id", org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * Create a <code>public.meta_config</code> table reference
     */
    public MetaConfig() {
        this(DSL.name("meta_config"), null);
    }

    /**
     * Create an aliased <code>public.meta_config</code> table reference
     */
    public MetaConfig(String alias) {
        this(DSL.name(alias), META_CONFIG);
    }

    /**
     * Create an aliased <code>public.meta_config</code> table reference
     */
    public MetaConfig(Name alias) {
        this(alias, META_CONFIG);
    }

    private MetaConfig(Name alias, Table<MetaConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private MetaConfig(Name alias, Table<MetaConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_META_CONFIG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MetaConfigRecord> getPrimaryKey() {
        return Keys.PK_META_CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MetaConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<MetaConfigRecord>>asList(Keys.PK_META_CONFIG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MetaConfigRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MetaConfigRecord, ?>>asList(Keys.META_CONFIG__FK_META_CONFIG_TYPE_ID, Keys.META_CONFIG__FK_META_CONFIG_ATTACHMENT_ID, Keys.META_CONFIG__FK_META_CONFIG_CORGE_TYPE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetaConfig as(String alias) {
        return new MetaConfig(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetaConfig as(Name alias) {
        return new MetaConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MetaConfig rename(String name) {
        return new MetaConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MetaConfig rename(Name name) {
        return new MetaConfig(name, null);
    }
}
