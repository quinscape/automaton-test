/*
 * This file is generated by jOOQ.
 */
package de.quinscape.automatontest.domain.tables.pojos;


import de.quinscape.domainql.jooq.GeneratedDomainObject;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "app_user",
    schema = "public",
    uniqueConstraints = {
        @UniqueConstraint(name = "uc_app_user_login", columnNames = { "login" })
    }
)
public class AppUser extends GeneratedDomainObject implements Serializable {

    private static final long serialVersionUID = 1L;

    private String id;
    private String login;
    private String password;
    private Boolean disabled;
    private Timestamp created;
    private Timestamp lastLogin;
    private String roles;

    public AppUser() {}

    public AppUser(AppUser value) {
        this.id = value.id;
        this.login = value.login;
        this.password = value.password;
        this.disabled = value.disabled;
        this.created = value.created;
        this.lastLogin = value.lastLogin;
        this.roles = value.roles;
    }

    public AppUser(
        String id,
        String login,
        String password,
        Boolean disabled,
        Timestamp created,
        Timestamp lastLogin,
        String roles
    ) {
        this.id = id;
        this.login = login;
        this.password = password;
        this.disabled = disabled;
        this.created = created;
        this.lastLogin = lastLogin;
        this.roles = roles;
    }

    /**
     * Getter for <code>public.app_user.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.app_user.id</code>.
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.app_user.login</code>.
     */
    @Column(name = "login", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    public String getLogin() {
        return this.login;
    }

    /**
     * Setter for <code>public.app_user.login</code>.
     */
    public void setLogin(String login) {
        this.login = login;
    }

    /**
     * Getter for <code>public.app_user.password</code>.
     */
    @Column(name = "password", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>public.app_user.password</code>.
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for <code>public.app_user.disabled</code>.
     */
    @Column(name = "disabled")
    public Boolean getDisabled() {
        return this.disabled;
    }

    /**
     * Setter for <code>public.app_user.disabled</code>.
     */
    public void setDisabled(Boolean disabled) {
        this.disabled = disabled;
    }

    /**
     * Getter for <code>public.app_user.created</code>.
     */
    @Column(name = "created", nullable = false, precision = 6)
    @NotNull
    public Timestamp getCreated() {
        return this.created;
    }

    /**
     * Setter for <code>public.app_user.created</code>.
     */
    public void setCreated(Timestamp created) {
        this.created = created;
    }

    /**
     * Getter for <code>public.app_user.last_login</code>.
     */
    @Column(name = "last_login", precision = 6)
    public Timestamp getLastLogin() {
        return this.lastLogin;
    }

    /**
     * Setter for <code>public.app_user.last_login</code>.
     */
    public void setLastLogin(Timestamp lastLogin) {
        this.lastLogin = lastLogin;
    }

    /**
     * Getter for <code>public.app_user.roles</code>.
     */
    @Column(name = "roles", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getRoles() {
        return this.roles;
    }

    /**
     * Setter for <code>public.app_user.roles</code>.
     */
    public void setRoles(String roles) {
        this.roles = roles;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final AppUser other = (AppUser) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.login == null) {
            if (other.login != null)
                return false;
        }
        else if (!this.login.equals(other.login))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.disabled == null) {
            if (other.disabled != null)
                return false;
        }
        else if (!this.disabled.equals(other.disabled))
            return false;
        if (this.created == null) {
            if (other.created != null)
                return false;
        }
        else if (!this.created.equals(other.created))
            return false;
        if (this.lastLogin == null) {
            if (other.lastLogin != null)
                return false;
        }
        else if (!this.lastLogin.equals(other.lastLogin))
            return false;
        if (this.roles == null) {
            if (other.roles != null)
                return false;
        }
        else if (!this.roles.equals(other.roles))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.login == null) ? 0 : this.login.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.disabled == null) ? 0 : this.disabled.hashCode());
        result = prime * result + ((this.created == null) ? 0 : this.created.hashCode());
        result = prime * result + ((this.lastLogin == null) ? 0 : this.lastLogin.hashCode());
        result = prime * result + ((this.roles == null) ? 0 : this.roles.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AppUser (");

        sb.append(id);
        sb.append(", ").append(login);
        sb.append(", ").append(password);
        sb.append(", ").append(disabled);
        sb.append(", ").append(created);
        sb.append(", ").append(lastLogin);
        sb.append(", ").append(roles);

        sb.append(")");
        return sb.toString();
    }
}
