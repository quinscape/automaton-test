/*
 * This file is generated by jOOQ.
 */
package de.quinscape.automatontest.domain.tables.pojos;


import de.quinscape.domainql.jooq.GeneratedDomainObject;
import de.quinscape.domainql.jsonb.JSONB;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "grid_columns",
    schema = "public",
    uniqueConstraints = {
        @UniqueConstraint(name = "grid_columns_name_owner_id_key", columnNames = { "name", "owner_id" })
    }
)
public class GridColumns extends GeneratedDomainObject implements Serializable {

    private static final long serialVersionUID = 1L;

    private String id;
    private String name;
    private JSONB columns;
    private String ownerId;

    public GridColumns() {}

    public GridColumns(GridColumns value) {
        this.id = value.id;
        this.name = value.name;
        this.columns = value.columns;
        this.ownerId = value.ownerId;
    }

    public GridColumns(
        String id,
        String name,
        JSONB columns,
        String ownerId
    ) {
        this.id = id;
        this.name = name;
        this.columns = columns;
        this.ownerId = ownerId;
    }

    /**
     * Getter for <code>public.grid_columns.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.grid_columns.id</code>.
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.grid_columns.name</code>.
     */
    @Column(name = "name", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.grid_columns.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.grid_columns.columns</code>.
     */
    @Column(name = "columns")
    public JSONB getColumns() {
        return this.columns;
    }

    /**
     * Setter for <code>public.grid_columns.columns</code>.
     */
    public void setColumns(JSONB columns) {
        this.columns = columns;
    }

    /**
     * Getter for <code>public.grid_columns.owner_id</code>.
     */
    @Column(name = "owner_id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getOwnerId() {
        return this.ownerId;
    }

    /**
     * Setter for <code>public.grid_columns.owner_id</code>.
     */
    public void setOwnerId(String ownerId) {
        this.ownerId = ownerId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final GridColumns other = (GridColumns) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.columns == null) {
            if (other.columns != null)
                return false;
        }
        else if (!this.columns.equals(other.columns))
            return false;
        if (this.ownerId == null) {
            if (other.ownerId != null)
                return false;
        }
        else if (!this.ownerId.equals(other.ownerId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.columns == null) ? 0 : this.columns.hashCode());
        result = prime * result + ((this.ownerId == null) ? 0 : this.ownerId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("GridColumns (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(columns);
        sb.append(", ").append(ownerId);

        sb.append(")");
        return sb.toString();
    }
}
