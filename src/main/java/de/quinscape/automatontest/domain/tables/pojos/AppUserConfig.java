/*
 * This file is generated by jOOQ.
 */
package de.quinscape.automatontest.domain.tables.pojos;


import de.quinscape.domainql.jooq.GeneratedDomainObject;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "app_user_config",
    schema = "public"
)
public class AppUserConfig extends GeneratedDomainObject implements Serializable {

    private static final long serialVersionUID = 1L;

    private String login;
    private String userId;
    private String attachmentId;

    public AppUserConfig() {}

    public AppUserConfig(AppUserConfig value) {
        this.login = value.login;
        this.userId = value.userId;
        this.attachmentId = value.attachmentId;
    }

    public AppUserConfig(
        String login,
        String userId,
        String attachmentId
    ) {
        this.login = login;
        this.userId = userId;
        this.attachmentId = attachmentId;
    }

    /**
     * Getter for <code>public.app_user_config.login</code>.
     */
    @Id
    @Column(name = "login", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    public String getLogin() {
        return this.login;
    }

    /**
     * Setter for <code>public.app_user_config.login</code>.
     */
    public void setLogin(String login) {
        this.login = login;
    }

    /**
     * Getter for <code>public.app_user_config.user_id</code>.
     */
    @Column(name = "user_id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>public.app_user_config.user_id</code>.
     */
    public void setUserId(String userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>public.app_user_config.attachment_id</code>.
     */
    @Column(name = "attachment_id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getAttachmentId() {
        return this.attachmentId;
    }

    /**
     * Setter for <code>public.app_user_config.attachment_id</code>.
     */
    public void setAttachmentId(String attachmentId) {
        this.attachmentId = attachmentId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final AppUserConfig other = (AppUserConfig) obj;
        if (this.login == null) {
            if (other.login != null)
                return false;
        }
        else if (!this.login.equals(other.login))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.attachmentId == null) {
            if (other.attachmentId != null)
                return false;
        }
        else if (!this.attachmentId.equals(other.attachmentId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.login == null) ? 0 : this.login.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.attachmentId == null) ? 0 : this.attachmentId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AppUserConfig (");

        sb.append(login);
        sb.append(", ").append(userId);
        sb.append(", ").append(attachmentId);

        sb.append(")");
        return sb.toString();
    }
}
