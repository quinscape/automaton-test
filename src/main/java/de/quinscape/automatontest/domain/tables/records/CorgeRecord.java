/*
 * This file is generated by jOOQ.
 */
package de.quinscape.automatontest.domain.tables.records;


import de.quinscape.automatontest.domain.tables.Corge;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "corge",
    schema = "public"
)
public class CorgeRecord extends UpdatableRecordImpl<CorgeRecord> implements Record12<String, String, String, Integer, Integer, String, Timestamp, String, String, Boolean, String, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.corge.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.corge.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.corge.version</code>.
     */
    public void setVersion(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.corge.version</code>.
     */
    @Column(name = "version", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getVersion() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.corge.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.corge.name</code>.
     */
    @Column(name = "name", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.corge.num</code>.
     */
    public void setNum(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.corge.num</code>.
     */
    @Column(name = "num", nullable = false)
    @NotNull
    public Integer getNum() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.corge.num2</code>.
     */
    public void setNum2(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.corge.num2</code>.
     */
    @Column(name = "num2")
    public Integer getNum2() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.corge.type_id</code>.
     */
    public void setTypeId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.corge.type_id</code>.
     */
    @Column(name = "type_id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getTypeId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.corge.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.corge.created</code>.
     */
    @Column(name = "created", nullable = false, precision = 6)
    @NotNull
    public Timestamp getCreated() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>public.corge.description</code>.
     */
    public void setDescription(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.corge.description</code>.
     */
    @Column(name = "description")
    public String getDescription() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.corge.owner_id</code>.
     */
    public void setOwnerId(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.corge.owner_id</code>.
     */
    @Column(name = "owner_id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getOwnerId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.corge.flag</code>.
     */
    public void setFlag(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.corge.flag</code>.
     */
    @Column(name = "flag", nullable = false)
    @NotNull
    public Boolean getFlag() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>public.corge.type2</code>.
     */
    public void setType2(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.corge.type2</code>.
     */
    @Column(name = "type2", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getType2() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.corge.modified</code>.
     */
    public void setModified(Timestamp value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.corge.modified</code>.
     */
    @Column(name = "modified", nullable = false, precision = 6)
    @NotNull
    public Timestamp getModified() {
        return (Timestamp) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<String, String, String, Integer, Integer, String, Timestamp, String, String, Boolean, String, Timestamp> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<String, String, String, Integer, Integer, String, Timestamp, String, String, Boolean, String, Timestamp> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Corge.CORGE.ID;
    }

    @Override
    public Field<String> field2() {
        return Corge.CORGE.VERSION;
    }

    @Override
    public Field<String> field3() {
        return Corge.CORGE.NAME;
    }

    @Override
    public Field<Integer> field4() {
        return Corge.CORGE.NUM;
    }

    @Override
    public Field<Integer> field5() {
        return Corge.CORGE.NUM2;
    }

    @Override
    public Field<String> field6() {
        return Corge.CORGE.TYPE_ID;
    }

    @Override
    public Field<Timestamp> field7() {
        return Corge.CORGE.CREATED;
    }

    @Override
    public Field<String> field8() {
        return Corge.CORGE.DESCRIPTION;
    }

    @Override
    public Field<String> field9() {
        return Corge.CORGE.OWNER_ID;
    }

    @Override
    public Field<Boolean> field10() {
        return Corge.CORGE.FLAG;
    }

    @Override
    public Field<String> field11() {
        return Corge.CORGE.TYPE2;
    }

    @Override
    public Field<Timestamp> field12() {
        return Corge.CORGE.MODIFIED;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getVersion();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Integer component4() {
        return getNum();
    }

    @Override
    public Integer component5() {
        return getNum2();
    }

    @Override
    public String component6() {
        return getTypeId();
    }

    @Override
    public Timestamp component7() {
        return getCreated();
    }

    @Override
    public String component8() {
        return getDescription();
    }

    @Override
    public String component9() {
        return getOwnerId();
    }

    @Override
    public Boolean component10() {
        return getFlag();
    }

    @Override
    public String component11() {
        return getType2();
    }

    @Override
    public Timestamp component12() {
        return getModified();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getVersion();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Integer value4() {
        return getNum();
    }

    @Override
    public Integer value5() {
        return getNum2();
    }

    @Override
    public String value6() {
        return getTypeId();
    }

    @Override
    public Timestamp value7() {
        return getCreated();
    }

    @Override
    public String value8() {
        return getDescription();
    }

    @Override
    public String value9() {
        return getOwnerId();
    }

    @Override
    public Boolean value10() {
        return getFlag();
    }

    @Override
    public String value11() {
        return getType2();
    }

    @Override
    public Timestamp value12() {
        return getModified();
    }

    @Override
    public CorgeRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public CorgeRecord value2(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public CorgeRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public CorgeRecord value4(Integer value) {
        setNum(value);
        return this;
    }

    @Override
    public CorgeRecord value5(Integer value) {
        setNum2(value);
        return this;
    }

    @Override
    public CorgeRecord value6(String value) {
        setTypeId(value);
        return this;
    }

    @Override
    public CorgeRecord value7(Timestamp value) {
        setCreated(value);
        return this;
    }

    @Override
    public CorgeRecord value8(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public CorgeRecord value9(String value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public CorgeRecord value10(Boolean value) {
        setFlag(value);
        return this;
    }

    @Override
    public CorgeRecord value11(String value) {
        setType2(value);
        return this;
    }

    @Override
    public CorgeRecord value12(Timestamp value) {
        setModified(value);
        return this;
    }

    @Override
    public CorgeRecord values(String value1, String value2, String value3, Integer value4, Integer value5, String value6, Timestamp value7, String value8, String value9, Boolean value10, String value11, Timestamp value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CorgeRecord
     */
    public CorgeRecord() {
        super(Corge.CORGE);
    }

    /**
     * Create a detached, initialised CorgeRecord
     */
    public CorgeRecord(String id, String version, String name, Integer num, Integer num2, String typeId, Timestamp created, String description, String ownerId, Boolean flag, String type2, Timestamp modified) {
        super(Corge.CORGE);

        setId(id);
        setVersion(version);
        setName(name);
        setNum(num);
        setNum2(num2);
        setTypeId(typeId);
        setCreated(created);
        setDescription(description);
        setOwnerId(ownerId);
        setFlag(flag);
        setType2(type2);
        setModified(modified);
    }

    /**
     * Create a detached, initialised CorgeRecord
     */
    public CorgeRecord(de.quinscape.automatontest.domain.tables.pojos.Corge value) {
        super(Corge.CORGE);

        if (value != null) {
            setId(value.getId());
            setVersion(value.getVersion());
            setName(value.getName());
            setNum(value.getNum());
            setNum2(value.getNum2());
            setTypeId(value.getTypeId());
            setCreated(value.getCreated());
            setDescription(value.getDescription());
            setOwnerId(value.getOwnerId());
            setFlag(value.getFlag());
            setType2(value.getType2());
            setModified(value.getModified());
        }
    }
}
