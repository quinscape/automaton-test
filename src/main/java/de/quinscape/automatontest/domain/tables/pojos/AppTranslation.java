/*
 * This file is generated by jOOQ.
*/
package de.quinscape.automatontest.domain.tables.pojos;


import de.quinscape.domainql.generic.GeneratedDomainObject;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "app_translation", schema = "public", uniqueConstraints = {
    @UniqueConstraint(columnNames = {"locale", "tag", "process_name"})
}, indexes = {
    @Index(name = "pk_app_translation", unique = true, columnList = "id ASC"),
    @Index(name = "uc_app_translation", unique = true, columnList = "locale ASC, tag ASC, process_name ASC")
})
public class AppTranslation extends GeneratedDomainObject implements Serializable {

    private static final long serialVersionUID = -388226620;

    private String    id;
    private String    locale;
    private String    tag;
    private String    processName;
    private String    translation;
    private Timestamp created;
    private Timestamp modified;

    public AppTranslation() {}

    public AppTranslation(AppTranslation value) {
        this.id = value.id;
        this.locale = value.locale;
        this.tag = value.tag;
        this.processName = value.processName;
        this.translation = value.translation;
        this.created = value.created;
        this.modified = value.modified;
    }

    public AppTranslation(
        String    id,
        String    locale,
        String    tag,
        String    processName,
        String    translation,
        Timestamp created,
        Timestamp modified
    ) {
        this.id = id;
        this.locale = locale;
        this.tag = tag;
        this.processName = processName;
        this.translation = translation;
        this.created = created;
        this.modified = modified;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @Column(name = "locale", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    public String getLocale() {
        return this.locale;
    }

    public void setLocale(String locale) {
        this.locale = locale;
    }

    @Column(name = "tag", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getTag() {
        return this.tag;
    }

    public void setTag(String tag) {
        this.tag = tag;
    }

    @Column(name = "process_name", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    public String getProcessName() {
        return this.processName;
    }

    public void setProcessName(String processName) {
        this.processName = processName;
    }

    @Column(name = "translation", nullable = false)
    @NotNull
    public String getTranslation() {
        return this.translation;
    }

    public void setTranslation(String translation) {
        this.translation = translation;
    }

    @Column(name = "created", nullable = false)
    @NotNull
    public Timestamp getCreated() {
        return this.created;
    }

    public void setCreated(Timestamp created) {
        this.created = created;
    }

    @Column(name = "modified", nullable = false)
    @NotNull
    public Timestamp getModified() {
        return this.modified;
    }

    public void setModified(Timestamp modified) {
        this.modified = modified;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AppTranslation (");

        sb.append(id);
        sb.append(", ").append(locale);
        sb.append(", ").append(tag);
        sb.append(", ").append(processName);
        sb.append(", ").append(translation);
        sb.append(", ").append(created);
        sb.append(", ").append(modified);

        sb.append(")");
        return sb.toString();
    }
}
