/*
 * This file is generated by jOOQ.
*/
package de.quinscape.automatontest.domain.tables;


import de.quinscape.automatontest.domain.Indexes;
import de.quinscape.automatontest.domain.Keys;
import de.quinscape.automatontest.domain.Public;
import de.quinscape.automatontest.domain.tables.records.OrderItemRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderItem extends TableImpl<OrderItemRecord> {

    private static final long serialVersionUID = -862100009;

    /**
     * The reference instance of <code>public.order_item</code>
     */
    public static final OrderItem ORDER_ITEM = new OrderItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderItemRecord> getRecordType() {
        return OrderItemRecord.class;
    }

    /**
     * The column <code>public.order_item.id</code>.
     */
    public final TableField<OrderItemRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.order_item.quantity</code>.
     */
    public final TableField<OrderItemRecord, Integer> QUANTITY = createField("quantity", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.order_item.product_id</code>.
     */
    public final TableField<OrderItemRecord, String> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.order_item.order_id</code>.
     */
    public final TableField<OrderItemRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * Create a <code>public.order_item</code> table reference
     */
    public OrderItem() {
        this(DSL.name("order_item"), null);
    }

    /**
     * Create an aliased <code>public.order_item</code> table reference
     */
    public OrderItem(String alias) {
        this(DSL.name(alias), ORDER_ITEM);
    }

    /**
     * Create an aliased <code>public.order_item</code> table reference
     */
    public OrderItem(Name alias) {
        this(alias, ORDER_ITEM);
    }

    private OrderItem(Name alias, Table<OrderItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrderItem(Name alias, Table<OrderItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_ORDER_ITEM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrderItemRecord> getPrimaryKey() {
        return Keys.PK_ORDER_ITEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrderItemRecord>> getKeys() {
        return Arrays.<UniqueKey<OrderItemRecord>>asList(Keys.PK_ORDER_ITEM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OrderItemRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OrderItemRecord, ?>>asList(Keys.ORDER_ITEM__FK_ORDER_ITEM_PRODUCT_ID, Keys.ORDER_ITEM__FK_ORDER_ITEM_ORDER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderItem as(String alias) {
        return new OrderItem(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderItem as(Name alias) {
        return new OrderItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderItem rename(String name) {
        return new OrderItem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderItem rename(Name name) {
        return new OrderItem(name, null);
    }
}
