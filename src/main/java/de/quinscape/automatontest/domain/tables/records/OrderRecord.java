/*
 * This file is generated by jOOQ.
*/
package de.quinscape.automatontest.domain.tables.records;


import de.quinscape.automatontest.domain.tables.Order;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "order", schema = "public", indexes = {
    @Index(name = "fki_order_order_shipping_type", columnList = "shipping_type ASC"),
    @Index(name = "fki_order_order_status", columnList = "status ASC"),
    @Index(name = "pk_order", unique = true, columnList = "id ASC")
})
public class OrderRecord extends UpdatableRecordImpl<OrderRecord> implements Record8<String, Long, String, Integer, String, String, String, Timestamp> {

    private static final long serialVersionUID = -1385961155;

    /**
     * Setter for <code>public.order.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.order.id</code>.
     */
    @Id
    @Column(name = "id", unique = true, nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.order.sum</code>.
     */
    public void setSum(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.order.sum</code>.
     */
    @Column(name = "sum", nullable = false, precision = 64)
    @NotNull
    public Long getSum() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.order.tracking_number</code>.
     */
    public void setTrackingNumber(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.order.tracking_number</code>.
     */
    @Column(name = "tracking_number", length = 255)
    @Size(max = 255)
    public String getTrackingNumber() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.order.shipping_type</code>.
     */
    public void setShippingType(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.order.shipping_type</code>.
     */
    @Column(name = "shipping_type", nullable = false, precision = 32)
    @NotNull
    public Integer getShippingType() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.order.status</code>.
     */
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.order.status</code>.
     */
    @Column(name = "status", nullable = false, length = 16)
    @NotNull
    @Size(max = 16)
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.order.customer_id</code>.
     */
    public void setCustomerId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.order.customer_id</code>.
     */
    @Column(name = "customer_id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getCustomerId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.order.number</code>.
     */
    public void setNumber(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.order.number</code>.
     */
    @Column(name = "number", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getNumber() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.order.accepted</code>.
     */
    public void setAccepted(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.order.accepted</code>.
     */
    @Column(name = "accepted")
    public Timestamp getAccepted() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, Long, String, Integer, String, String, String, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, Long, String, Integer, String, String, String, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Order.ORDER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Order.ORDER.SUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Order.ORDER.TRACKING_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Order.ORDER.SHIPPING_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Order.ORDER.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Order.ORDER.CUSTOMER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Order.ORDER.NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Order.ORDER.ACCEPTED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getSum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getTrackingNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getShippingType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getAccepted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getSum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTrackingNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getShippingType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getAccepted();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value2(Long value) {
        setSum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value3(String value) {
        setTrackingNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value4(Integer value) {
        setShippingType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value5(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value6(String value) {
        setCustomerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value7(String value) {
        setNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value8(Timestamp value) {
        setAccepted(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord values(String value1, Long value2, String value3, Integer value4, String value5, String value6, String value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderRecord
     */
    public OrderRecord() {
        super(Order.ORDER);
    }

    /**
     * Create a detached, initialised OrderRecord
     */
    public OrderRecord(String id, Long sum, String trackingNumber, Integer shippingType, String status, String customerId, String number, Timestamp accepted) {
        super(Order.ORDER);

        set(0, id);
        set(1, sum);
        set(2, trackingNumber);
        set(3, shippingType);
        set(4, status);
        set(5, customerId);
        set(6, number);
        set(7, accepted);
    }
}
