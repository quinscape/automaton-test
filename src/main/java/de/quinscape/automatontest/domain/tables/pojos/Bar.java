/*
 * This file is generated by jOOQ.
 */
package de.quinscape.automatontest.domain.tables.pojos;


import de.quinscape.domainql.jooq.GeneratedDomainObject;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "bar",
    schema = "public"
)
public class Bar extends GeneratedDomainObject implements Serializable {

    private static final long serialVersionUID = 1L;

    private String id;
    private String name;
    private Integer numa;
    private Integer numb;
    private Timestamp created;

    public Bar() {}

    public Bar(Bar value) {
        this.id = value.id;
        this.name = value.name;
        this.numa = value.numa;
        this.numb = value.numb;
        this.created = value.created;
    }

    public Bar(
        String id,
        String name,
        Integer numa,
        Integer numb,
        Timestamp created
    ) {
        this.id = id;
        this.name = name;
        this.numa = numa;
        this.numb = numb;
        this.created = created;
    }

    /**
     * Getter for <code>public.bar.id</code>.
     */
    @Column(name = "id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.bar.id</code>.
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.bar.name</code>.
     */
    @Column(name = "name", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.bar.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.bar.numa</code>.
     */
    @Column(name = "numa", nullable = false)
    @NotNull
    public Integer getNuma() {
        return this.numa;
    }

    /**
     * Setter for <code>public.bar.numa</code>.
     */
    public void setNuma(Integer numa) {
        this.numa = numa;
    }

    /**
     * Getter for <code>public.bar.numb</code>.
     */
    @Column(name = "numb", nullable = false)
    @NotNull
    public Integer getNumb() {
        return this.numb;
    }

    /**
     * Setter for <code>public.bar.numb</code>.
     */
    public void setNumb(Integer numb) {
        this.numb = numb;
    }

    /**
     * Getter for <code>public.bar.created</code>.
     */
    @Column(name = "created", nullable = false, precision = 6)
    public Timestamp getCreated() {
        return this.created;
    }

    /**
     * Setter for <code>public.bar.created</code>.
     */
    public void setCreated(Timestamp created) {
        this.created = created;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Bar other = (Bar) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.numa == null) {
            if (other.numa != null)
                return false;
        }
        else if (!this.numa.equals(other.numa))
            return false;
        if (this.numb == null) {
            if (other.numb != null)
                return false;
        }
        else if (!this.numb.equals(other.numb))
            return false;
        if (this.created == null) {
            if (other.created != null)
                return false;
        }
        else if (!this.created.equals(other.created))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.numa == null) ? 0 : this.numa.hashCode());
        result = prime * result + ((this.numb == null) ? 0 : this.numb.hashCode());
        result = prime * result + ((this.created == null) ? 0 : this.created.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Bar (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(numa);
        sb.append(", ").append(numb);
        sb.append(", ").append(created);

        sb.append(")");
        return sb.toString();
    }
}
