/*
 * This file is generated by jOOQ.
 */
package de.quinscape.automatontest.domain.tables.pojos;


import de.quinscape.domainql.jooq.GeneratedDomainObject;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "corge",
    schema = "public"
)
public class Corge extends GeneratedDomainObject implements Serializable {

    private static final long serialVersionUID = 1L;

    private String id;
    private String version;
    private String name;
    private Integer num;
    private Integer num2;
    private String typeId;
    private Timestamp created;
    private String description;
    private String ownerId;
    private Boolean flag;
    private String type2;
    private Timestamp modified;

    public Corge() {}

    public Corge(Corge value) {
        this.id = value.id;
        this.version = value.version;
        this.name = value.name;
        this.num = value.num;
        this.num2 = value.num2;
        this.typeId = value.typeId;
        this.created = value.created;
        this.description = value.description;
        this.ownerId = value.ownerId;
        this.flag = value.flag;
        this.type2 = value.type2;
        this.modified = value.modified;
    }

    public Corge(
        String id,
        String version,
        String name,
        Integer num,
        Integer num2,
        String typeId,
        Timestamp created,
        String description,
        String ownerId,
        Boolean flag,
        String type2,
        Timestamp modified
    ) {
        this.id = id;
        this.version = version;
        this.name = name;
        this.num = num;
        this.num2 = num2;
        this.typeId = typeId;
        this.created = created;
        this.description = description;
        this.ownerId = ownerId;
        this.flag = flag;
        this.type2 = type2;
        this.modified = modified;
    }

    /**
     * Getter for <code>public.corge.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.corge.id</code>.
     */
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.corge.version</code>.
     */
    @Column(name = "version", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getVersion() {
        return this.version;
    }

    /**
     * Setter for <code>public.corge.version</code>.
     */
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for <code>public.corge.name</code>.
     */
    @Column(name = "name", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.corge.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>public.corge.num</code>.
     */
    @Column(name = "num", nullable = false)
    @NotNull
    public Integer getNum() {
        return this.num;
    }

    /**
     * Setter for <code>public.corge.num</code>.
     */
    public void setNum(Integer num) {
        this.num = num;
    }

    /**
     * Getter for <code>public.corge.num2</code>.
     */
    @Column(name = "num2")
    public Integer getNum2() {
        return this.num2;
    }

    /**
     * Setter for <code>public.corge.num2</code>.
     */
    public void setNum2(Integer num2) {
        this.num2 = num2;
    }

    /**
     * Getter for <code>public.corge.type_id</code>.
     */
    @Column(name = "type_id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getTypeId() {
        return this.typeId;
    }

    /**
     * Setter for <code>public.corge.type_id</code>.
     */
    public void setTypeId(String typeId) {
        this.typeId = typeId;
    }

    /**
     * Getter for <code>public.corge.created</code>.
     */
    @Column(name = "created", nullable = false, precision = 6)
    @NotNull
    public Timestamp getCreated() {
        return this.created;
    }

    /**
     * Setter for <code>public.corge.created</code>.
     */
    public void setCreated(Timestamp created) {
        this.created = created;
    }

    /**
     * Getter for <code>public.corge.description</code>.
     */
    @Column(name = "description")
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>public.corge.description</code>.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>public.corge.owner_id</code>.
     */
    @Column(name = "owner_id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getOwnerId() {
        return this.ownerId;
    }

    /**
     * Setter for <code>public.corge.owner_id</code>.
     */
    public void setOwnerId(String ownerId) {
        this.ownerId = ownerId;
    }

    /**
     * Getter for <code>public.corge.flag</code>.
     */
    @Column(name = "flag", nullable = false)
    @NotNull
    public Boolean getFlag() {
        return this.flag;
    }

    /**
     * Setter for <code>public.corge.flag</code>.
     */
    public void setFlag(Boolean flag) {
        this.flag = flag;
    }

    /**
     * Getter for <code>public.corge.type2</code>.
     */
    @Column(name = "type2", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getType2() {
        return this.type2;
    }

    /**
     * Setter for <code>public.corge.type2</code>.
     */
    public void setType2(String type2) {
        this.type2 = type2;
    }

    /**
     * Getter for <code>public.corge.modified</code>.
     */
    @Column(name = "modified", nullable = false, precision = 6)
    @NotNull
    public Timestamp getModified() {
        return this.modified;
    }

    /**
     * Setter for <code>public.corge.modified</code>.
     */
    public void setModified(Timestamp modified) {
        this.modified = modified;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Corge other = (Corge) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.version == null) {
            if (other.version != null)
                return false;
        }
        else if (!this.version.equals(other.version))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.num == null) {
            if (other.num != null)
                return false;
        }
        else if (!this.num.equals(other.num))
            return false;
        if (this.num2 == null) {
            if (other.num2 != null)
                return false;
        }
        else if (!this.num2.equals(other.num2))
            return false;
        if (this.typeId == null) {
            if (other.typeId != null)
                return false;
        }
        else if (!this.typeId.equals(other.typeId))
            return false;
        if (this.created == null) {
            if (other.created != null)
                return false;
        }
        else if (!this.created.equals(other.created))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.ownerId == null) {
            if (other.ownerId != null)
                return false;
        }
        else if (!this.ownerId.equals(other.ownerId))
            return false;
        if (this.flag == null) {
            if (other.flag != null)
                return false;
        }
        else if (!this.flag.equals(other.flag))
            return false;
        if (this.type2 == null) {
            if (other.type2 != null)
                return false;
        }
        else if (!this.type2.equals(other.type2))
            return false;
        if (this.modified == null) {
            if (other.modified != null)
                return false;
        }
        else if (!this.modified.equals(other.modified))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.version == null) ? 0 : this.version.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.num == null) ? 0 : this.num.hashCode());
        result = prime * result + ((this.num2 == null) ? 0 : this.num2.hashCode());
        result = prime * result + ((this.typeId == null) ? 0 : this.typeId.hashCode());
        result = prime * result + ((this.created == null) ? 0 : this.created.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.ownerId == null) ? 0 : this.ownerId.hashCode());
        result = prime * result + ((this.flag == null) ? 0 : this.flag.hashCode());
        result = prime * result + ((this.type2 == null) ? 0 : this.type2.hashCode());
        result = prime * result + ((this.modified == null) ? 0 : this.modified.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Corge (");

        sb.append(id);
        sb.append(", ").append(version);
        sb.append(", ").append(name);
        sb.append(", ").append(num);
        sb.append(", ").append(num2);
        sb.append(", ").append(typeId);
        sb.append(", ").append(created);
        sb.append(", ").append(description);
        sb.append(", ").append(ownerId);
        sb.append(", ").append(flag);
        sb.append(", ").append(type2);
        sb.append(", ").append(modified);

        sb.append(")");
        return sb.toString();
    }
}
