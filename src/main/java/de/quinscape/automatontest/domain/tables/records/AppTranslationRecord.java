/*
 * This file is generated by jOOQ.
 */
package de.quinscape.automatontest.domain.tables.records;


import de.quinscape.automatontest.domain.tables.AppTranslation;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "app_translation",
    schema = "public",
    uniqueConstraints = {
        @UniqueConstraint(name = "uc_app_translation", columnNames = { "locale", "tag", "process_name" })
    }
)
public class AppTranslationRecord extends UpdatableRecordImpl<AppTranslationRecord> implements Record7<String, String, String, String, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.app_translation.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.app_translation.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, length = 36)
    @NotNull
    @Size(max = 36)
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.app_translation.locale</code>.
     */
    public void setLocale(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.app_translation.locale</code>.
     */
    @Column(name = "locale", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    public String getLocale() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.app_translation.tag</code>.
     */
    public void setTag(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.app_translation.tag</code>.
     */
    @Column(name = "tag", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getTag() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.app_translation.process_name</code>.
     */
    public void setProcessName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.app_translation.process_name</code>.
     */
    @Column(name = "process_name", nullable = false, length = 64)
    @NotNull
    @Size(max = 64)
    public String getProcessName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.app_translation.translation</code>.
     */
    public void setTranslation(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.app_translation.translation</code>.
     */
    @Column(name = "translation", nullable = false)
    @NotNull
    public String getTranslation() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.app_translation.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.app_translation.created</code>.
     */
    @Column(name = "created", nullable = false, precision = 6)
    @NotNull
    public Timestamp getCreated() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>public.app_translation.modified</code>.
     */
    public void setModified(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.app_translation.modified</code>.
     */
    @Column(name = "modified", nullable = false, precision = 6)
    @NotNull
    public Timestamp getModified() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, String, String, String, Timestamp, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, String, String, String, Timestamp, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AppTranslation.APP_TRANSLATION.ID;
    }

    @Override
    public Field<String> field2() {
        return AppTranslation.APP_TRANSLATION.LOCALE;
    }

    @Override
    public Field<String> field3() {
        return AppTranslation.APP_TRANSLATION.TAG;
    }

    @Override
    public Field<String> field4() {
        return AppTranslation.APP_TRANSLATION.PROCESS_NAME;
    }

    @Override
    public Field<String> field5() {
        return AppTranslation.APP_TRANSLATION.TRANSLATION;
    }

    @Override
    public Field<Timestamp> field6() {
        return AppTranslation.APP_TRANSLATION.CREATED;
    }

    @Override
    public Field<Timestamp> field7() {
        return AppTranslation.APP_TRANSLATION.MODIFIED;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLocale();
    }

    @Override
    public String component3() {
        return getTag();
    }

    @Override
    public String component4() {
        return getProcessName();
    }

    @Override
    public String component5() {
        return getTranslation();
    }

    @Override
    public Timestamp component6() {
        return getCreated();
    }

    @Override
    public Timestamp component7() {
        return getModified();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLocale();
    }

    @Override
    public String value3() {
        return getTag();
    }

    @Override
    public String value4() {
        return getProcessName();
    }

    @Override
    public String value5() {
        return getTranslation();
    }

    @Override
    public Timestamp value6() {
        return getCreated();
    }

    @Override
    public Timestamp value7() {
        return getModified();
    }

    @Override
    public AppTranslationRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public AppTranslationRecord value2(String value) {
        setLocale(value);
        return this;
    }

    @Override
    public AppTranslationRecord value3(String value) {
        setTag(value);
        return this;
    }

    @Override
    public AppTranslationRecord value4(String value) {
        setProcessName(value);
        return this;
    }

    @Override
    public AppTranslationRecord value5(String value) {
        setTranslation(value);
        return this;
    }

    @Override
    public AppTranslationRecord value6(Timestamp value) {
        setCreated(value);
        return this;
    }

    @Override
    public AppTranslationRecord value7(Timestamp value) {
        setModified(value);
        return this;
    }

    @Override
    public AppTranslationRecord values(String value1, String value2, String value3, String value4, String value5, Timestamp value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppTranslationRecord
     */
    public AppTranslationRecord() {
        super(AppTranslation.APP_TRANSLATION);
    }

    /**
     * Create a detached, initialised AppTranslationRecord
     */
    public AppTranslationRecord(String id, String locale, String tag, String processName, String translation, Timestamp created, Timestamp modified) {
        super(AppTranslation.APP_TRANSLATION);

        setId(id);
        setLocale(locale);
        setTag(tag);
        setProcessName(processName);
        setTranslation(translation);
        setCreated(created);
        setModified(modified);
    }

    /**
     * Create a detached, initialised AppTranslationRecord
     */
    public AppTranslationRecord(de.quinscape.automatontest.domain.tables.pojos.AppTranslation value) {
        super(AppTranslation.APP_TRANSLATION);

        if (value != null) {
            setId(value.getId());
            setLocale(value.getLocale());
            setTag(value.getTag());
            setProcessName(value.getProcessName());
            setTranslation(value.getTranslation());
            setCreated(value.getCreated());
            setModified(value.getModified());
        }
    }
}
